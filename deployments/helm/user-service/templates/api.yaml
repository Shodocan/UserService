apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.image.repository }}
          ports:
            - name: http
              containerPort: {{ .Values.config.port }}
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /_healthz
              port: {{ .Values.config.port }}
            initialDelaySeconds: 1
            periodSeconds: 1
            successThreshold: 3
          livenessProbe:
            httpGet:
              path: /_healthz
              port: {{ .Values.config.port }}
            initialDelaySeconds: 1
            periodSeconds: 5
          env:
          - name: MONGODB_HOST
            value: user-db
          - name: MONGODB_ADMINUSERNAME
            valueFrom:
              configMapKeyRef:
                name: user-config
                key: mongoUsername
          - name: MONGODB_ADMINPASSWORD
            valueFrom:
              configMapKeyRef:
                name: user-config
                key: mongoPassword
          - name: MONGODB_DATABASE
            valueFrom:
              configMapKeyRef:
                name: user-config
                key: mongoDatabase
          - name: REDISDB_ACTIVE
            valueFrom:
              configMapKeyRef:
                name: user-config
                key: redis
---
apiVersion: v1
kind: Service
metadata:
  name: user-service
spec:
  selector:
    app: user-service
  ports:
    - protocol: TCP
      port: 80
      targetPort: {{ .Values.config.port }}
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: user-service-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
  - http:
      paths:
      - path: /swagger/
        backend:
          serviceName: user-service-service
          servicePort: 80
      - path: /api/v1/
        backend:
          serviceName: user-service-service
          servicePort: 80
      